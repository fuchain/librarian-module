version: "3"
services:
  redis:
    image: redis
    container_name: librarian-redis-dev
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - node
    restart: always

  postgres:
    image: postgres
    container_name: librarian-postgres-dev
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    restart: always
    environment:
      POSTGRES_USER: capstone
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: librarianmodule

  postgresn:
    image: postgres
    container_name: librarian-postgresn-dev
    ports:
      - 5433:5432
    volumes:
      - postgresn-data:/var/lib/postgresql/data
    networks:
      - node
    restart: always
    environment:
      POSTGRES_USER: capstone
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: node

  webapp:
    build:
      context: ./WebApp
      dockerfile: ./dev.Dockerfile
    ports:
      - 3000:3000
    image: librarian-webapp-dev
    container_name: librarian-webapp-dev
    volumes:
      - ./WebApp/src:/root/src/app/src
      - ./WebApp/public:/root/src/app/public
      - ./WebApp/.env:/root/src/app/.env
    environment:
      VUE_APP_API_BASE_URL: http://localhost:5000
      VUE_APP_API_BETA_URL: http://localhost:5002
      VUE_APP_SOCKET_URL: http://localhost:5002
    tty: true

  webserver:
    build:
      context: ./WebServer
      dockerfile: ./dev.Dockerfile
    ports:
      - 5000:5000
    networks:
      - backend
    depends_on:
      - postgres
    image: librarian-webserver-dev
    container_name: librarian-webserver-dev
    volumes:
      - ./WebServer/src:/root/src/api/src
    environment:
    - SPRING_PROFILES_ACTIVE=docker
    tty: true

  nodeserver:
    build:
      context: ./NodeServer
      dockerfile: ./dev.Dockerfile
    ports:
      - 5002:5002
    networks:
      - node
    depends_on:
      - postgresn
      - redis
    image: librarian-nodeserver-dev
    container_name: librarian-nodeserver-dev
    volumes:
      - ./NodeServer/src:/root/src/node/src
      - ./NodeServer/.env:/root/src/node/.env
      - ./NodeServer/sendgrid.env:/root/src/node/sendgrid.env
    environment:
      DB_HOST: postgresn
      DB_USER: capstone
      DB_PASS: capstone
      DB_NAME: node
      DB_DIALECT: postgres
      REDIS_HOST: redis
    tty: true

  pgadmin:
    image: dpage/pgadmin4
    container_name: librarian-pgadmin-dev
    ports:
      - 1002:80
    depends_on:
      - postgres
      - postgresn
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fptu.tech
      PGADMIN_DEFAULT_PASSWORD: capstone

networks:
  backend:
  node:

volumes:
  redis-data:
  postgres-data:
  postgresn-data: