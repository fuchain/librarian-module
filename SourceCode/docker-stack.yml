version: "3"
services:
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - node
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  postgres:
    image: postgres
    command: postgres -c 'max_connections=500'
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_USER: capstone
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: librarianmodule
    deploy:
      placement:
        constraints: [node.role == manager]

  mongodb:
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - mongodb-data:/data/db
    networks:
      - node
    environment:
      MONGO_INITDB_ROOT_USERNAME: capstone
      MONGO_INITDB_ROOT_PASSWORD: capstone
    deploy:
      placement:
        constraints: [node.role == manager]

  webapp:
    image: fptu/librarian-webapp:latest
    ports:
      - 3000:80
    environment:
      VUE_APP_API_BASE_URL: https://lapi.fptu.tech
      VUE_APP_API_BETA_URL: https://napi.fptu.tech
      VUE_APP_SOCKET_URL: http://napi.fptu.tech
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  visualizeapp:
    image: fptu/librarian-visualizeapp:latest
    ports:
      - 3001:80
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  webserver:
    image: fptu/librarian-webserver:latest
    ports:
      - 5000:5000
    networks:
      - backend
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  nodeserver:
    image: fptu/librarian-nodeserver:latest
    ports:
      - 5002:5002
    networks:
      - node
    depends_on:
      - postgresn
      - redis
    environment:
      DB_HOST: mongodb
      DB_USER: capstone
      DB_PASS: capstone
      DB_NAME: librariannode
      REDIS_HOST: redis
      SENDGRID_API_KEY: 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
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 1002:80
    depends_on:
      - postgres
      - postgresn
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fptu.tech
      PGADMIN_DEFAULT_PASSWORD: capstone
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins-data:/var/jenkins_home
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "1000:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  backend:
  node:

volumes:
  redis-data:
  postgres-data:
  mongodb-data:
  jenkins-data:
