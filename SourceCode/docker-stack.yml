version: "3"
services:
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      - node
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_USER: capstone
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: librarianmodule
    deploy:
      placement:
        constraints: [node.role == manager]

  postgresn:
    image: postgres
    ports:
      - 5433:5433
    volumes:
      - postgresn-data:/var/lib/postgresql/data
    networks:
      - node
    environment:
      POSTGRES_USER: capstone
      POSTGRES_PASSWORD: capstone
      POSTGRES_DB: node
    deploy:
      placement:
        constraints: [node.role == manager]

  webapp:
    image: fptu/librarian-webapp:latest
    ports:
      - 3000:80
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  webserver:
    image: fptu/librarian-webserver:latest
    ports:
      - 5000:5000
    networks:
      - backend
    depends_on:
      - postgres
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  nodeserver:
    image: fptu/librarian-nodeserver:latest
    ports:
      - 5002:5002
    networks:
      - node
    depends_on:
      - postgresn
      - redis
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 1000:80
    depends_on:
      - postgres
      - postgresn
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fptu.tech
      PGADMIN_DEFAULT_PASSWORD: capstone
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - 8080:8080
      - 50000:50000
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  backend:
  node:

volumes:
  postgres-data:
  postgresn-data:
